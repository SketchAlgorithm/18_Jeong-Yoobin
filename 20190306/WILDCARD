package _190306;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class WILDCARD {
	
	static int[][] cache;
	

	public static void main(String[] args) {

		FastScanner sc = new FastScanner();
		
		// ? : 	어떤 글자든 ㄱㅊ , * : 어떤 문자열이든 ㄱㅊ(길이 0도 허용)
		
		int testcase = sc.nextInt();
		for(int t = 0 ; t<testcase; t++) {
			initCache();
			String wildcard = sc.next();
			int wnum = sc.nextInt();
			String[] list = new String[wnum];
			for(int i = 0 ; i<wnum; i++) 
				list[i] = sc.next();
			
		}
		
	}
	
	static void initCache() {
		cache = new int[128][];
		for(int i = 0 ; i<cache.length; i++) {
			cache[i] = new int[128];
			for(int j = 0; j<cache[i].length; j++) {
				cache[i][j] = -1;
			}
		}
	}
	
	
	static void print_match(String wildcard, String[] list) {
	
	}
	
	static boolean isPossible(String wildcard, String temp) {
		if(wildcard.equals(temp))
			return true;
		else if(wildcard.charAt(wildcard.length() - 1) == '*')
			return isPossible(wildcard.substring(0, wildcard.length()-1), temp.substring(0, temp.length()-1));
		else if(wildcard.charAt(wildcard.length() - 1) == '?') {
			return isPossible(wildcard.substring)
		}
		else
			return false;
	}

	static class FastScanner {
		BufferedReader in;
		StringTokenizer st;

		public FastScanner() {
			in = new BufferedReader(new InputStreamReader(System.in));
		}

		public String next() {
			while (st == null || !st.hasMoreTokens()) {
				try {
					String temp = in.readLine();
					if (temp == null)
						return null;
					st = new StringTokenizer(temp);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		public int nextInt() {
			return Integer.parseInt(next());
		}

	}

}
